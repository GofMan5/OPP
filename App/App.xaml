<Application x:Class="App.AppClass"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:App"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <!-- Здесь будут глобальные ресурсы и стили приложения -->
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Словари стилей можно добавить здесь -->
                <ResourceDictionary Source="/App;component/Resources/welcome_image.xaml"/>
                <ResourceDictionary x:Name="ThemeResourceDictionary" Source="/App;component/Themes/DarkTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Настройки приложения -->
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <System:Boolean x:Key="EnableAnimations">True</System:Boolean>
            <System:Boolean x:Key="EnableRoundedCorners">True</System:Boolean>
            <CornerRadius x:Key="DefaultCornerRadius">6</CornerRadius>
            <CornerRadius x:Key="DisabledCornerRadius">0</CornerRadius>
            
            <!-- Триггер для анимаций -->
            <Style x:Key="AnimatedElement">
                <Setter Property="Control.RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter Property="Control.RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{StaticResource EnableAnimations}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(Control.RenderTransform).(ScaleTransform.ScaleX)"
                                                    From="0.95" To="1.0" Duration="0:0:0.2"
                                                    EasingFunction="{StaticResource EaseOutBack}"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(Control.RenderTransform).(ScaleTransform.ScaleY)"
                                                    From="0.95" To="1.0" Duration="0:0:0.2"
                                                    EasingFunction="{StaticResource EaseOutBack}"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                    From="0" To="1" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="ButtonAnimation" TargetType="Button" BasedOn="{StaticResource AnimatedElement}">
                <Style.Triggers>
                    <DataTrigger Binding="{StaticResource EnableAnimations}" Value="True">
                        <Setter Property="Control.RenderTransformOrigin" Value="0.5,0.5"/>
                        <Setter Property="Control.RenderTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Setter.Value>
                        </Setter>
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(Control.RenderTransform).(ScaleTransform.ScaleX)"
                                                    From="0.95" To="1.0" Duration="0:0:0.2"
                                                    EasingFunction="{StaticResource EaseOutBack}"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(Control.RenderTransform).(ScaleTransform.ScaleY)"
                                                    From="0.95" To="1.0" Duration="0:0:0.2"
                                                    EasingFunction="{StaticResource EaseOutBack}"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!-- Функции анимации -->
            <BackEase x:Key="EaseOutBack" EasingMode="EaseOut" Amplitude="0.3"/>
            
            <!-- Общие триггеры и преобразования для анимаций -->
            <ScaleTransform x:Key="DefaultScaleTransform" ScaleX="1" ScaleY="1" />
            <RotateTransform x:Key="DefaultRotateTransform" Angle="0" />
            
            <!-- Темные цвета для приложения -->
            <SolidColorBrush x:Key="PrimaryColor" Color="#1e1e2e"/>
            <SolidColorBrush x:Key="SecondaryColor" Color="#181825"/>
            <SolidColorBrush x:Key="AccentColor" Color="#74c7ec"/>
            <SolidColorBrush x:Key="BackgroundColor" Color="#11111b"/>
            <SolidColorBrush x:Key="TextColor" Color="#cdd6f4"/>
            <SolidColorBrush x:Key="MutedTextColor" Color="#7f849c"/>
            
            <!-- Стили для кнопок и элементов управления задаются в темах -->
            
            <!-- Базовые стили для элементов управления -->
            <Style TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource HighlightBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="{DynamicResource DefaultCornerRadius}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="TextBox">
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Background" Value="{DynamicResource BackgroundSecondaryBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}" 
                                    CornerRadius="{DynamicResource DefaultCornerRadius}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="4" ShadowDepth="0" Opacity="0.3" Color="#74c7ec"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Стили для ScrollViewer -->
            <Style TargetType="ScrollViewer">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollViewer">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <ScrollContentPresenter Grid.Row="0" Grid.Column="0"/>
                                
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                          Grid.Row="0" 
                                          Grid.Column="1"
                                          Value="{TemplateBinding VerticalOffset}"
                                          Maximum="{TemplateBinding ScrollableHeight}"
                                          ViewportSize="{TemplateBinding ViewportHeight}"
                                          Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                                
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                          Orientation="Horizontal"
                                          Grid.Row="1"
                                          Grid.Column="0"
                                          Value="{TemplateBinding HorizontalOffset}"
                                          Maximum="{TemplateBinding ScrollableWidth}"
                                          ViewportSize="{TemplateBinding ViewportWidth}"
                                          Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Стили для ScrollBar -->
            <Style TargetType="ScrollBar">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Width" Value="8"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid>
                                <Border x:Name="TrackBackground" 
                                       Background="Transparent" 
                                       CornerRadius="{DynamicResource DefaultCornerRadius}"/>
                                
                                <Track x:Name="PART_Track" IsDirectionReversed="True">
                                    <Track.Thumb>
                                        <Thumb>
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Background="{DynamicResource BorderBrush}" 
                                                           CornerRadius="{DynamicResource DefaultCornerRadius}" 
                                                           Margin="1"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PART_Track" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter TargetName="PART_Track" Property="Opacity" Value="0.6"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height" Value="8"/>
                        <Setter Property="Width" Value="Auto"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application> 